# Copyright (c) 2025 Robert Bosch GmbH.
#
# This program and the accompanying materials are made available under the
# terms of the MIT License which is available at
# https://opensource.org/licenses/MIT.
#
# SPDX-License-Identifier: MIT

services:
  playground-fe:
    container_name: playground-fe
    build:
      context: autowrx
    image: boschvn/playground-fe:local-latest
    ports:
      - "${PLAYGROUND_FE_CLIENT_PORT:-3000}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: ${SHARED_RESTART_POLICY:-always}
    depends_on:
      - kong
    networks:
      - node-network

  kong:
    platform: linux/amd64
    image: boschvn/playground-kong:latest
    container_name: ${SHARED_ENV:-dev}-kong
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_NGINX_WORKER_PROCESSES: ${KONG_SVC_NGINX_WORKER_PROCESSES:-auto}
    restart: ${SHARED_RESTART_POLICY:-always}
    networks:
      - node-network
    depends_on:
      - playground-be
      - inventory-be

  playground-be:
    platform: linux/amd64
    container_name: playground-be
    build:
      context: backend-core
    image: boschvn/playground-be:latest
    environment:
      # Map prefixed env vars to service-expected names
      - NODE_ENV=${SHARED_NODE_ENV:-development}
      - CORS_ORIGIN=${SHARED_CORS_ORIGIN}
      - CLIENT_BASE_URL=${PLAYGROUND_BE_CLIENT_BASE_URL}
      - MONGODB_URL=${PLAYGROUND_BE_MONGODB_URL}
      - UPLOAD_PORT=${UPLOAD_SVC_PORT}
      - UPLOAD_DOMAIN=${UPLOAD_SVC_DOMAIN}
      - JWT_SECRET=${PLAYGROUND_BE_JWT_SECRET}
      - JWT_ACCESS_EXPIRATION_MINUTES=${PLAYGROUND_BE_JWT_ACCESS_EXPIRATION_MINUTES}
      - JWT_REFRESH_EXPIRATION_DAYS=${PLAYGROUND_BE_JWT_REFRESH_EXPIRATION_DAYS}
      - JWT_RESET_PASSWORD_EXPIRATION_MINUTES=${PLAYGROUND_BE_JWT_RESET_PASSWORD_EXPIRATION_MINUTES}
      - JWT_VERIFY_EMAIL_EXPIRATION_MINUTES=${PLAYGROUND_BE_JWT_VERIFY_EMAIL_EXPIRATION_MINUTES}
      - JWT_COOKIE_NAME=${PLAYGROUND_BE_JWT_COOKIE_NAME}
      - JWT_COOKIE_DOMAIN=${PLAYGROUND_BE_JWT_COOKIE_DOMAIN}
      - CACHE_BASE_URL=${PLAYGROUND_BE_CACHE_BASE_URL}
      - LOG_BASE_URL=${PLAYGROUND_BE_LOG_BASE_URL}
      - ADMIN_EMAILS=${PLAYGROUND_BE_ADMIN_EMAILS}
      - ADMIN_PASSWORD=${PLAYGROUND_BE_ADMIN_PASSWORD}
    depends_on:
      - playground-db
      - upload
    networks:
      - node-network
    restart: ${SHARED_RESTART_POLICY:-always}
    command: yarn start

  playground-db:
    container_name: playground-db
    image: mongo:4.4.6-bionic
    volumes:
      - dbdata:/data/db
    networks:
      - node-network
    restart: ${SHARED_RESTART_POLICY:-always}

  upload:
    platform: linux/amd64
    container_name: playground-upload
    image: boschvn/upload:latest
    environment:
      # Map prefixed env vars to service-expected names
      - NODE_ENV=${SHARED_NODE_ENV:-development}
      - UPLOAD_PORT=${UPLOAD_SVC_PORT}
      - UPLOAD_PATH=${UPLOAD_SVC_PATH}
      - UPLOAD_DOMAIN=${UPLOAD_SVC_DOMAIN}
    volumes:
      - "${UPLOAD_SVC_PATH}:/usr/src/upload/data"
    networks:
      - node-network
    restart: ${SHARED_RESTART_POLICY:-always}
    command: npm run prod

  inventory-fe:
    platform: linux/amd64
    container_name: inventory-fe
    build:
      context: inventory/frontend
    image: boschvn/inventory-fe:latest
    environment:
      - NEXT_PUBLIC_SERVER_BASE_URL=${INVENTORY_FE_SERVER_BASE_URL}
      - SESSION_JWT_SECRET=${INVENTORY_FE_SESSION_JWT_SECRET}
    restart: ${SHARED_RESTART_POLICY:-always}
    ports:
      - "${INVENTORY_FE_PORT}:3000"
    networks:
      - node-network

  inventory-be:
    platform: linux/amd64
    container_name: inventory-be
    build:
      context: inventory/backend
    image: boschvn/inventory-be:latest
    environment:
      - NODE_ENV=${SHARED_NODE_ENV:-development}
      - MONGODB_URL=${INVENTORY_BE_MONGODB_URL}
      - AUTHORIZATION_URL=${INVENTORY_BE_AUTHORIZATION_URL}
      - CORS_ORIGIN=${SHARED_CORS_ORIGIN}
    restart: ${SHARED_RESTART_POLICY:-always}
    depends_on:
      - inventory-db
    networks:
      - node-network
    command: yarn start

  inventory-db:
    container_name: inventory-db
    image: mongo:4.4.6-bionic
    volumes:
      - inventorydata:/data/db
    networks:
      - node-network
    restart: ${SHARED_RESTART_POLICY:-always}

volumes:
  dbdata:
  inventorydata:

networks:
  node-network:
    driver: bridge
