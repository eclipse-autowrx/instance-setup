services:
  playground-fe:
    container_name: playground-fe
    image: boschvn/playground-fe:latest
    ports:
      - "${CLIENT_PORT:-3000}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always

  kong:
    platform: linux/amd64
    image: kong:3.7.1-ubuntu
    container_name: playground-kong
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
    ports:
      - "${KONG_PROXY_PORT}:8000"
    restart: ${RESTART_POLICY:-always}
    networks:
      - node-network
    volumes:
      - "./:/kong/declarative/"
    depends_on:
      - playground-be

  playground-be:
    platform: linux/amd64
    container_name: playground-be
    image: boschvn/playground-be:latest
    env_file:
      - .env
    depends_on:
      - playground-db
      - upload
    networks:
      - node-network
    restart: ${RESTART_POLICY:-always}
    command: yarn start

  playground-db:
    container_name: playground-db
    image: mongo:4.4.6-bionic
    volumes:
      - dbdata:/data/db
    networks:
      - node-network
    restart: ${RESTART_POLICY:-always}

  upload:
    platform: linux/amd64
    container_name: playground-upload
    image: boschvn/upload:latest
    env_file:
      - .env
    volumes:
      - '${UPLOAD_PATH}:/usr/src/upload/data'
    networks:
      - node-network
    restart: ${RESTART_POLICY:-always}
    command: npm run prod

volumes:
  dbdata:


networks:
  node-network:
    driver: bridge
